{"version":3,"sources":["components/helpers/fetchDataPromise.js","components/SearchBar.js","components/helpers/fetchHistoryPromise.js","components/dropdowns/styles.js","components/dropdowns/Dropdown.js","components/dropdowns/HistoryDropdown.js","components/pageEditField/pageEditfield.style.js","components/pageEditField/PageEditField.js","components/dropdowns/SourcesDropdown.js","components/Modal.js","components/BuildButton.js","components/Table.js","components/Pages.js","components/uploadForm/UploadForm.styles.js","components/uploadForm/MUIStyles.js","components/uploadForm/validation.js","components/uploadForm/Input.js","components/uploadForm/Checkbox.js","components/uploadForm/Option.js","components/uploadForm/fieldArray.js","components/uploadForm/UploadForm.js","App.js","serviceWorker.js","index.js"],"names":["pageIndex","pageSize","searchFilter","a","pagination","url","console","log","fetch","method","response","status","json","Styles","Styled","form","SearchBar","props","useState","queryString","setQueryString","search","event","preventDefault","tag","queryArray","split","tagResult","tagIndexes","i","length","push","fromIndex","toIndex","result","slice","join","key","substring","value","splice","parseTags","formCallback","className","placeholder","defaultValue","onSubmit","onChange","e","currentTarget","onClick","icon","faSearch","color","_id","Collapsible","styled","div","History","DropdownButton","collapsed","faAngleUp","faAngleDown","Dropdown","setCollapsed","name","buttonText","setButtonText","loading","setLoading","data","setData","addFieldIndex","loadHistoryData","fetchDataCallback","href","content","target","closest","querySelector","map","index","renderDataCallback","addField","renderAddFieldCallback","SourcesDropdown","fetchHistoryPromise","request","addfield","history","Array","isArray","modified","timestamp","committer","emoji","emojify","message","file","DisplayContainer","noTitle","EditContainer","BaseStyle","PageEditField","initialMode","mode","setMode","firstValue","setValue","isDeleted","setIsDeleted","newValue","useRef","undoButton","setUndoButton","exitNoSave","current","saveInput","fieldName","then","res","doc","catch","err","error","resetField","id","disabled","faSave","faTimesCircle","faPlusCircle","faUndo","faEdit","deletable","deleteCallback","faTrashAlt","renderField","PlusButton","fieldState","avoid","filter","JSON","stringify","source","sourceArray","newSourceList","remote","body","update","bodyString","headers","fields","setFields","undefined","loadData","field","renderData","concat","deletePageHandler","postURL","options","Model","open","setOpen","original","toggleModal","pageName","formFieldComponents","websitePath","hidden","__v","cellID","aria-label","f","Button","variant","type","BuildButton","isSubmitting","setIsSubmitting","hasSubmit","setHasSubmit","buildPage","buildUrl","controller","AbortController","timeout","signal","setTimeout","abort","clearTimeout","style","backgroundColor","page","Loading","tr","NavButtonsLeft","NavButtonsRight","Pagination","Table","columns","fetchData","controlledPageCount","pageCount","useTable","initialState","manualPagination","usePagination","getTableProps","getTableBodyProps","gotoPage","canPreviousPage","canNextPage","pageOptions","nextPage","previousPage","setPageSize","prepareRow","state","React","setSearchFilter","useEffect","row","getRowProps","cells","cell","output","column","Header","getCellProps","allCells","render","max","Number","width","Pages","setPageCount","useMemo","accessor","useCallback","fetchDataPromise","newData","pgCount","Math","ceil","parseInt","count","Container","maxWidth","Fieldset","fieldset","FormWrapper","SubmitWrapper","SourceRow","BlueCheckbox","withStyles","root","blue","checked","Checkbox","useStyles","makeStyles","theme","margin","spacing","sourceRowStyles","validationSchema","Yup","required","sources","meta","template","oneOf","MyTextInput","label","useField","noValidate","autoComplete","component","TextField","touched","MyCheckbox","children","FormControlLabel","control","MySelect","NativeSelect","SourcesSection","useFormikContext","values","classes","errors","arrayHelpers","size","remove","insert","submitHandler","s","SignupForm","success","submitResult","setSubmitResult","Paper","elevation","elementtype","initialValues","validateOnChange","validateOnBlur","validationMount","setSubmitting","Object","handleChange","submitCount","createMuiTheme","typography","fontFamily","overrides","MuiCssBaseline","palette","background","default","App","ThemeProvider","CssBaseline","exact","path","UploadForm","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c56bc5f2.chunk.js","sourcesContent":["export default async (pageIndex, pageSize, searchFilter) => {\n\tconst pagination = `page=${pageIndex || 0}&per_page=${pageSize || 1}`;\n\n\tlet url = \"\";\n\tif (searchFilter) {\n\t\turl = `/api/v1/watch/pages/${searchFilter}?${pagination}`;\n\t} else {\n\t\turl = `/api/v1/watch/pages?${pagination}`;\n\t}\n\n\tconsole.log(`fetching items ${url}`);\n\tconst response = await fetch(url, { method: \"get\" });\n\tif (response.status !== 200) console.log(response);\n\tconst json = await response.json();\n\treturn json;\n};\n","import React, { useState } from \"react\";\nimport Styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Styles = Styled.form`\n\tpadding: 0;\n\tpadding: 1em 0;\n\t\n\t\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 10px auto;\n\t\n\t\n\tinput {\n\t\tgrid-column: 1;\n\t\tbackground-color: #363636;\n\t\tborder: none;\n\t}\n\n\tbutton {\n\t\tgrid-column: 3;\n\t}\n`;\n\nconst parseTags = (queryString) => {\n\t// split the string into an array of words\n\tconst queryArray = queryString.split(\" \");\n\n\t// store the end result\n\tconst tagResult = [];\n\n\t// store indexes for the detected tags here\n\tconst tagIndexes = [];\n\n\t// for each word add its index to tagIndexes if its a tag keyword\n\tfor (let i = 0; i < queryArray.length; i++) {\n\t\tconst word = queryArray[i];\n\t\tif (word[0] === \":\") tagIndexes.push(i);\n\t}\n\n\t// print the tagIndexes [number, number,...]\n\t// console.log(`tags found at ${tagIndexes}`);\n\n\t// for each tagindex get a \"from and to\" range\n\t// use that range to slice the queryArray of all words to extract the tag + its value\n\tfor (let i = 0; i < tagIndexes.length; i++) {\n\t\t// get the fromIndex which is the tag name in the array\n\t\tconst fromIndex = tagIndexes[i];\n\t\t// get the toIndex which is the next tag index plus one\n\t\tconst toIndex = tagIndexes[i + 1] || queryArray.length;\n\n\t\t// the results is a range in the query array [fromTheTag...toTheNextTag]\n\t\tconst result = queryArray.slice(fromIndex, toIndex).join(\" \");\n\t\ttagResult.push({\n\t\t\tkey: result.split(\" \")[0].substring(1),\n\t\t\tvalue: result.split(\" \").splice(1, result.length).join(\" \"),\n\t\t});\n\t\t// console.log(`from ${fromIndex} to ${toIndex}: ${result}`);\n\t}\n\n\treturn tagResult;\n};\n\nexport default function SearchBar(props) {\n\tconst [queryString, setQueryString] = useState(\"\");\n\tconst search = (event) => {\n\t\tevent.preventDefault();\n\t\t// console.log(\"searching!\");\n\n\t\t// right now theres a limitation on the blogwatcher backend that only allows for 1 things to be queried at a time\n\t\t// this is a workaround where i just return an array of 1 tag so in the future i can work with multiple tags\n\t\tconst tag = parseTags(queryString)[0];\n\t\tprops.formCallback(queryString, tag);\n\t};\n\n\treturn (\n\t\t<Styles>\n\t\t\t<input\n\t\t\t\tclassName=\"input\"\n\t\t\t\tplaceholder=\"Search\"\n\t\t\t\tdefaultValue=\"\"\n\t\t\t\tonSubmit={search}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetQueryString(e.currentTarget.value);\n\t\t\t\t}}\n\t\t\t></input>\n\t\t\t<button className=\"button is-dark\" onClick={search}>\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\ticon={faSearch}\n\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t</Styles>\n\t);\n}\n","export default async (_id) => {\n\tconst url = `http://blog_gateway/api/v1/watch/history/find/${_id}`;\n\n\tconsole.log(`fetching items: \"${url}\"`);\n\treturn fetch(url, { method: \"get\" });\n};\n","import styled from \"styled-components\";\n\nconst Collapsible = styled.div`\n\toverflow: scroll;\n\tmargin-top: 1em;\n\tborder-radius: 10px;\n\n\t.content {\n\t\tmax-height: 1000px;\n\t\ttransition: max-height 0.2s;\n\t\tbackground-color: #363636;\n\t\tpadding: 2.5px 5px;\n\t}\n\n\t.collapsed {\n\t\tmax-height: 0;\n\t\ttransition: max-height 0.2s;\n\t\toverflow: hidden;\n\t}\n\n\ta {\n\t\tcolor: #dedede;\n\t\tbackground-color: #363636;\n\t\twidth: 100%;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr auto 10px;\n\t\tpadding: 2.5px 5px;\n\t\tpadding-top: 5px;\n\t}\n\n\tsvg {\n\t\theight: 100%;\n\t}\n`;\n\nconst History = styled.div`\n\tmargin: 1em 0;\n\tpadding: 1ch 0;\n\tfont-size: 0.5em;\n\tborder-bottom: 1px solid #dedede;\n\tpadding: 2.5px 5px;\n`;\n\nexport { Collapsible, History };\n","import React, { useState } from \"react\";\nimport \"../../styles/styles.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Collapsible } from \"./styles\";\n\nfunction DropdownButton(props) {\n\tconst { collapsed } = props;\n\treturn (\n\t\t<FontAwesomeIcon\n\t\t\tonClick={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t}}\n\t\t\tclassName=\"has-text-right icon\"\n\t\t\ticon={collapsed ? faAngleUp : faAngleDown}\n\t\t\tcolor={\"white\"}\n\t\t/>\n\t);\n}\n\n/**\n *\n * @param {*} props\n * @param {*} name\n * @param {*} fetchDataCallback\n * @param {*} renderDataCallback\n */\nfunction Dropdown(props) {\n\tconst [collapsed, setCollapsed] = useState(false);\n\tconst [buttonText, setButtonText] = useState(`Open ${props.name}`);\n\tconst [loading, setLoading] = useState(true);\n\tconst [data, setData] = useState([]);\n\tconst [addFieldIndex, setAddFieldIndex] = useState(0);\n\tconst { _id } = props;\n\n\tconst loadHistoryData = async () => {\n\t\tif (!collapsed) {\n\t\t\tconst { data } = await props.fetchDataCallback(_id);\n\t\t\tsetData(data);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst handleCollapser = (event) => {\n\t\tevent.preventDefault();\n\t\tsetCollapsed(!collapsed);\n\n\t\t// get the target conent div to show/hide it\n\t\tconst content = event.target.closest(\"div\").querySelector(\".content\");\n\n\t\tif (collapsed) {\n\t\t\tcontent.className = \"content collapsed\";\n\t\t\tsetButtonText(`Open ${props.name}`);\n\t\t} else {\n\t\t\tcontent.className = \"content\";\n\t\t\tsetButtonText(`Close ${props.name}`);\n\t\t\tloadHistoryData();\n\t\t}\n\t};\n\n\treturn (\n\t\t<Collapsible>\n\t\t\t<a href={\"/\"} onClick={handleCollapser}>\n\t\t\t\t{buttonText} <DropdownButton collapsed={collapsed} />\n\t\t\t</a>\n\n\t\t\t<div className=\"content collapsed\">\n\t\t\t\t{!loading &&\n\t\t\t\t\tdata.map((data, index) => {\n\t\t\t\t\t\tconsole.log(`redering ${props.name} dropdown`);\n\t\t\t\t\t\treturn props.renderDataCallback(data, _id, index);\n\t\t\t\t\t})}\n\n\t\t\t\t{!loading &&\n\t\t\t\t\tprops.addField &&\n\t\t\t\t\tprops.renderAddFieldCallback(addFieldIndex)}\n\n\t\t\t\t{!loading && data.length === 0 && `No data found.`}\n\t\t\t</div>\n\t\t</Collapsible>\n\t);\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport fetchHistoryPromise from \"../helpers/fetchHistoryPromise\";\nimport emoji from \"node-emoji\";\nimport \"../../styles/styles.scss\";\nimport { History } from \"./styles\";\nimport Dropdown from \"./Dropdown\";\n\n/**\n *\n * @param {JSON} history - History object returned from blogwatcher\n */\nconst historyEntry = (history, key) => {\n\t// if the history data is a single \"event\" its returned as a JSON object and needs to be turned into an iterable array\n\tif (!Array.isArray(history.data.modified)) {\n\t\thistory.data.modified = new Array(history.data.modified);\n\t}\n\n\treturn (\n\t\t<History key={key + history.data.timestamp}>\n\t\t\t{/* author */}\n\t\t\t<h3>Author</h3>\n\t\t\t<span>\n\t\t\t\tCommit from {history.data.committer.name} at{\" \"}\n\t\t\t\t{history.data.timestamp}.\n\t\t\t</span>\n\t\t\t{/* message */}\n\t\t\t<h3>Message</h3>\n\t\t\t<span>{emoji.emojify(history.data.message)}</span>\n\t\t\t{/* modified */}\n\t\t\t<h3>Modified</h3>\n\t\t\t<ul>\n\t\t\t\t{history.data.modified.map((file, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={history.data.timestamp}>\n\t\t\t\t\t\t\t<span>{file}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</History>\n\t);\n};\n\nexport default function SourcesDropdown(props) {\n\tconst { _id } = props;\n\n\t// mock the \"api call\" to the database\n\t// because we already have the source information on hand\n\tconst loadHistoryData = async (_id) => {\n\t\tconst request = await fetchHistoryPromise(_id);\n\t\tconst result = await request.json();\n\t\tconsole.log(result);\n\t\treturn result;\n\t};\n\n\treturn (\n\t\t<Dropdown\n\t\t\t_id={_id}\n\t\t\tname={\"history\"}\n\t\t\taddfield={false}\n\t\t\tfetchDataCallback={(_id) => {\n\t\t\t\treturn loadHistoryData(_id);\n\t\t\t}}\n\t\t\trenderDataCallback={(data, index) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\treturn historyEntry(data, index);\n\t\t\t}}\n\t\t></Dropdown>\n\t);\n}\n","import styled from \"styled-components\";\n\nexport const DisplayContainer = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: ${(props) =>\n\t\tprops.noTitle ? \"1fr auto\" : \"30% 1fr auto auto\"};\n\t// padding: 5px;\n\tbackground: ${(props) => (props.color ? props.color : \"magenta\")};\n`;\n\nexport const EditContainer = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr auto;\n\t// padding: 5px;\n\n\tinput {\n\t\twidth: 100%;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbackground: ${(props) => (props.color ? props.color : \"#282C34\")};\n\t\tborder-top: none;\n\t\tborder-left: none;\n\t\tborder-right: none;\n\t\tborder-bottom: 1px solid #dedede;\n\t\tcolor: #dedede;\n\t\tfont-size: 1em;\n\t}\n`;\n\nexport const AddContainer = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr auto;\n\t// padding: 5px;\n\n\tinput {\n\t\twidth: 100%;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbackground: ${(props) => (props.color ? props.color : \"#282C34\")};\n\t\tborder-top: none;\n\t\tborder-left: none;\n\t\tborder-right: none;\n\t\tborder-bottom: 1px solid #dedede;\n\t\tcolor: #dedede;\n\t\tfont-size: 1em;\n\t}\n`;\n\nexport const BaseStyle = styled.div`\n\t.field-edit-button {\n\t\tgrid-column: last-col - 1;\n\t}\n\n\t.field-delete-button {\n\t\tgrid-column: last-col;\n\t}\n\n\tspan {\n\t\tcolor: #dedede;\n\t\t// dont overflow text\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t}\n`;\n","import React, { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaEdit,\n\tfaSave,\n\tfaTimesCircle,\n\tfaUndo,\n\tfaTrashAlt,\n\tfaPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n\tDisplayContainer,\n\tEditContainer,\n\tBaseStyle,\n} from \"./pageEditfield.style\";\n\n// takes...\n// ? name - name of the input field\n// ? value - current value of the input field\n/**\n *\n * @param {string} props.value - The initial text field string\n * @param {string} props._id - The ID of the document this field belongs to\n * @param {string} props.fieldName - The real name of the field in the database\n * @param {string} props.disabled - Set this if you wish for the field to be turned off\n * @param {string} props.deletable - A string of \"display\" \"edit\" or \"add\" to set the intial mode\n * @param {string} props.formCallback - A callback method that receives the _id, and URLSearchParams (url queryString)\n * @param {string} props.deleteCallback - A callback method that receives the _id, and URLSearchParams (url queryString)\n * @param {string} props.resetField -\n * @param {string} props.initialMode - A string of \"display\" \"edit\" or \"add\" to set the intial mode\n */\nfunction PageEditField(props) {\n\tconst [mode, setMode] = useState(props.initialMode);\n\tconst [firstValue] = useState(props.value);\n\tconst [value, setValue] = useState(props.value);\n\tconst [isDeleted, setIsDeleted] = useState(false);\n\tconst newValue = useRef(\"\"); // this is a ref because its just internally tracking the proposed field change value\n\tconst [undoButton, setUndoButton] = useState(false);\n\n\tconst exitNoSave = () => {\n\t\tconsole.log(\"exiting without saving\");\n\t\tsetValue(value);\n\t\tnewValue.current = value;\n\t\tsetMode(\"dispay\");\n\t};\n\n\t// const saveInput = React.useCallback(() => {\n\tconst saveInput = () => {\n\t\ttry {\n\t\t\tprops\n\t\t\t\t.formCallback(\n\t\t\t\t\t// fieldState\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: props._id,\n\t\t\t\t\t\tnewValue: newValue.current,\n\t\t\t\t\t\tfieldName: props.fieldName,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tfirstValue: firstValue,\n\t\t\t\t\t},\n\t\t\t\t\t// avoid this field\n\t\t\t\t\tvalue,\n\t\t\t\t\t// substitute this field\n\t\t\t\t\tnewValue.current\n\t\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((doc) => {\n\t\t\t\t\tif (doc) {\n\t\t\t\t\t\t// TODO leaving this code graveyard here to remind myself that\n\t\t\t\t\t\t// TODO the setValue should be set to the reponse from the database,\n\t\t\t\t\t\t// TODO however i need a way to drill through JSON objects to get the right key value i want\n\t\t\t\t\t\t// TODO see https://stackoverflow.com/questions/10799428/multiple-level-attribute-retrieval-using-array-notation-from-a-json-object\n\t\t\t\t\t\t// if it was saved then go ahead and update the value (which is rendered in the field) to be this new value\n\t\t\t\t\t\t// set the value to the returned data after updating it to ensure it matches\n\t\t\t\t\t\t// console.log(`response: ${JSON.stringify(doc.data)}`);\n\t\t\t\t\t\t// console.log(\n\t\t\t\t\t\t// \t`setting the field display 'value' to ${props.fieldName}`\n\t\t\t\t\t\t// );\n\t\t\t\t\t\t// console.log(`value = ${doc.data[props.fieldName]}`);\n\t\t\t\t\t\t// setValue(newValue.current);\n\t\t\t\t\t\t// setFirstValue(newValue);\n\t\t\t\t\t\tsetValue(newValue.current);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(doc);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// if the update failed then set it back to the first value\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tsetValue(firstValue);\n\t\t\t\t});\n\t\t\tsetMode(\"display\");\n\t\t\tconsole.log(\"finished updating field successfully\");\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\t// TODO push an error to the client here\n\t\t}\n\t};\n\t// , [value, setMode, newValue, props, firstValue]);\n\n\tconst resetField = async () => {\n\t\tawait props\n\t\t\t.formCallback(\n\t\t\t\t// fieldState\n\t\t\t\t{\n\t\t\t\t\t_id: props._id,\n\t\t\t\t\tnewValue: newValue.current,\n\t\t\t\t\tfieldName: props.fieldName,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tfirstValue: firstValue,\n\t\t\t\t},\n\t\t\t\t// avoid this field\n\t\t\t\tnewValue.current,\n\t\t\t\t// substitute this field\n\t\t\t\tfirstValue\n\t\t\t)\n\t\t\t.then((doc) => {\n\t\t\t\tif (doc) setValue(firstValue);\n\t\t\t});\n\n\t\tconsole.log(\"done\");\n\n\t\t// hide the undo button\n\t\tsetUndoButton(false);\n\t};\n\n\t/**\n\t *\n\t * @param {String} type - display | edit | add\n\t */\n\tconst renderField = () => {\n\t\t// console.log(`mode: ${mode}`);\n\n\t\tswitch (mode) {\n\t\t\tcase \"edit\":\n\t\t\t\treturn (\n\t\t\t\t\t// display the field \"name: value\" and the edit button and save button\n\t\t\t\t\t<EditContainer id={props.value} color={props.color}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"is-primary\"\n\t\t\t\t\t\t\tdefaultValue={value}\n\t\t\t\t\t\t\tid=\"inputField\"\n\t\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t// every time the input field is changed change the prospective new value\n\t\t\t\t\t\t\t\tnewValue.current = e.currentTarget.value;\n\t\t\t\t\t\t\t\tif (props.onChange) {\n\t\t\t\t\t\t\t\t\tprops.onChange(e.currentTarget.value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t\t{/* save button */}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button is-text\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsaveInput();\n\t\t\t\t\t\t\t\t\tsetUndoButton(true); // show the undo button to offer a \"rollback\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\t\t\t\t\ticon={faSave}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t{/* cancle button */}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button is-text\"\n\t\t\t\t\t\t\t\tonClick={exitNoSave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\t\t\t\t\ticon={faTimesCircle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</EditContainer>\n\t\t\t\t);\n\n\t\t\tcase \"add\":\n\t\t\t\treturn (\n\t\t\t\t\t// display the field \"name: value\" and the edit button and save button\n\t\t\t\t\t<EditContainer id={props.value} color={props.color}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"is-primary\"\n\t\t\t\t\t\t\tdefaultValue={value}\n\t\t\t\t\t\t\tid=\"inputField\"\n\t\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t// every time the input field is changed change the prospective new value\n\t\t\t\t\t\t\t\tnewValue.current = e.currentTarget.value;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t\t{/* save button */}\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button is-text\"\n\t\t\t\t\t\t\t\tonClick={saveInput}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\t\t\t\t\ticon={faPlusCircle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</EditContainer>\n\t\t\t\t);\n\n\t\t\tcase \"display\":\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<DisplayContainer\n\t\t\t\t\t\tnoTitle={props.noTitle ? true : false}\n\t\t\t\t\t\tcolor={props.color}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* only print if noTitle is not included */}\n\t\t\t\t\t\t{!props.noTitle && <span>{props.name}: </span>}\n\t\t\t\t\t\t<span>{value}</span>\n\n\t\t\t\t\t\t{undoButton && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button is-text\"\n\t\t\t\t\t\t\t\tonClick={resetField}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\t\t\t\t\ticon={faUndo}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{/* edit button */}\n\t\t\t\t\t\t{!props.disabled && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button is-text field-edit-button\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetMode(\"edit\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\t\t\t\t\ticon={faEdit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{props.deletable && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button is-text field-delete-button\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetIsDeleted(true);\n\t\t\t\t\t\t\t\t\tprops.deleteCallback(\n\t\t\t\t\t\t\t\t\t\tprops._id,\n\t\t\t\t\t\t\t\t\t\tnewValue,\n\t\t\t\t\t\t\t\t\t\tprops.fieldName,\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\tfirstValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"has-text-right icon\"\n\t\t\t\t\t\t\t\t\ticon={faTrashAlt}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</DisplayContainer>\n\t\t\t\t);\n\t\t}\n\t};\n\n\t// if its deleted, hide it\n\treturn <BaseStyle>{!isDeleted ? renderField(mode) : <></>}</BaseStyle>;\n}\n\nexport default PageEditField;\n","import React, { useState } from \"react\";\nimport PageEditField from \"../pageEditField/PageEditField\";\nimport \"../../styles/styles.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaAngleDown,\n\tfaAngleUp,\n\tfaPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Collapsible } from \"./styles\";\n\nfunction DropdownButton(props) {\n\tconst { collapsed } = props;\n\treturn (\n\t\t<FontAwesomeIcon\n\t\t\tonClick={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t}}\n\t\t\tclassName=\"has-text-right icon\"\n\t\t\ticon={collapsed ? faAngleUp : faAngleDown}\n\t\t\tcolor={\"white\"}\n\t\t/>\n\t);\n}\n\nfunction PlusButton(props) {\n\treturn (\n\t\t<FontAwesomeIcon\n\t\t\tonClick={(e) => {\n\t\t\t\tconsole.log(\"add button clicked\");\n\t\t\t\te.preventDefault();\n\t\t\t\tprops.onClick();\n\t\t\t}}\n\t\t\tclassName=\"has-text-right icon\"\n\t\t\ticon={faPlusCircle}\n\t\t\tcolor={\"white\"}\n\t\t/>\n\t);\n}\n\n/**\n *\n * @param {*} fieldState - {_id, newValue, fieldName, value, firstValue}\n * @param {*} avoid - the element to avoid\n * @param {*} push - the element to substitute\n */\nconst formCallback = async (fieldState, avoid, push) => {\n\t// extract the _id from the fieldState goody bag\n\tconst { _id } = fieldState;\n\n\t// UPDATE WHERE SELECT _id IS _id\n\tconst filter = { _id: _id };\n\n\t// ##──────────────────────────────────────────────────────────────────────────────────────\n\t// The goal of this code is to\n\t// 1. get the og page.source from the database\n\t// 2. remove the og value from it and keep everything else\n\t// 3. replace the og value with our new one\n\t// 4. submit that new array back as our updated sources list\n\tconst doc = await (\n\t\tawait fetch(\n\t\t\t`http://blog_gateway/api/v1/watch/page?_id=${_id}`\n\t\t)\n\t).json();\n\n\tconsole.log(\n\t\t`the sources received from the database: ${JSON.stringify(\n\t\t\tdoc.source,\n\t\t\tnull,\n\t\t\t2\n\t\t)}`\n\t);\n\n\tconst sourceArray = doc.source;\n\tconsole.log(`avoiding ${avoid} from the database sources`);\n\n\t// get everything that isnt the first value from the og sources list\n\tconst newSourceList = sourceArray\n\t\t.filter((source) => source.url !== avoid)\n\t\t.map((source) => source);\n\n\t// now push our new source to the array that doesnt contain the one we are changing\n\tconsole.log(`add ${push} to: ${newSourceList}`);\n\tnewSourceList.push({ remote: true, url: push });\n\n\t// fully overwrite the source list with our new one\n\tconst update = { source: newSourceList };\n\n\t// construct the body request\n\tconst body = {\n\t\tfilter,\n\t\tupdate,\n\t};\n\n\t// print them out for debugging\n\t// console.log(`filter: ${JSON.stringify(filter, null, 2)}`);\n\tconsole.log(`update: ${JSON.stringify(update, null, 2)}`);\n\n\t// stringify it for the POST request\n\tconst bodyString = JSON.stringify(body);\n\tconsole.log(body);\n\n\t// send the post request\n\tconst url = `http://blog_gateway/api/v1/watch/update/${_id}`;\n\treturn fetch(url, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json; charset=UTF-8\",\n\t\t},\n\t\tbody: bodyString,\n\t});\n};\n\nconst deleteCallback = async (_id, newValue, fieldName, value, firstValue) => {\n\t// UPDATE WHERE SELECT _id IS _id\n\tconst filter = { _id: _id };\n\n\t// ##──────────────────────────────────────────────────────────────────────────────────────\n\t// The goal of this code is to\n\t// 1. get the og page.source from the database\n\t// 2. remove the og value from it and keep everything else\n\t// 4. submit that new array back as our updated sources list\n\tconst doc = await (\n\t\tawait fetch(\n\t\t\t`http://blog_gateway/api/v1/watch/page?_id=${_id}`\n\t\t)\n\t).json();\n\n\tconst sourceArray = doc.source;\n\n\t// get everything that isnt the first value from the og sources list\n\tconst newSourceList = sourceArray\n\t\t.filter((source) => source.url !== firstValue)\n\t\t.map((source) => source);\n\n\t// fully overwrite the source list with our new one\n\tconst update = { source: newSourceList };\n\n\t// construct the body request\n\tconst body = {\n\t\tfilter,\n\t\tupdate,\n\t};\n\n\t// stringify it for the POST request\n\tconsole.log(\"stringifying the body\");\n\tconst bodyString = JSON.stringify(body);\n\n\t// print them out for debugging\n\t// console.log(`filter: ${JSON.stringify(filter)}`);\n\t// console.log(`update: ${JSON.stringify(update)}`);\n\n\t// send the post request\n\tconst url = `http://blog_gateway/api/v1/watch/update/${_id}`;\n\treturn fetch(url, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json; charset=UTF-8\",\n\t\t},\n\t\tbody: bodyString,\n\t});\n};\n\nconst renderData = (url, _id, index, initialMode) => {\n\treturn (\n\t\t<PageEditField\n\t\t\tnoTitle\n\t\t\tname={\"URL\"}\n\t\t\tvalue={url}\n\t\t\tfieldName={\"source.url\"}\n\t\t\tdisabled={false}\n\t\t\tdeletable={true}\n\t\t\tinitialMode={initialMode || \"display\"}\n\t\t\t_id={_id}\n\t\t\tcolor={\"#363636\"}\n\t\t\tkey={_id + \"/\" + url + index}\n\t\t\t// formCallback takes: {fieldState: {_id, newValue, fieldName, value, firstValue}, avoid, push}\n\t\t\tformCallback={formCallback}\n\t\t\tdeleteCallback={(_id, newValue, fieldName, value, firstValue) => {\n\t\t\t\tconst props = [_id, newValue, fieldName, value, firstValue];\n\t\t\t\treturn deleteCallback(...props);\n\t\t\t}}\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// this is a callback that runs every time a letter is typed into the field\n\t\t\t\t// console.log(newValue);\n\t\t\t}}\n\t\t/>\n\t);\n};\n\n/**\n *\n * @param {String} props._id - ID for the document that this dropdown refers to\n * @param {Boolean} props.addField - set to true to enable add-field button\n * @param {String} props.name - Name of this dropdown\n * @param {Array} props.source - sources array of json. EG. [{url: string, remote: bool}]\n */\nexport default function SourcesDropdown(props) {\n\t// ##──── State ─────────────────────────────────────────────────────────────────────────────\n\t// toggle to control if the dropdown is displayed\n\tconst [collapsed, setCollapsed] = useState(false);\n\n\t// the text of the dropdown button\n\tconst [buttonText, setButtonText] = useState(`Open ${props.name}`);\n\n\t// controls when data is being loaded in to pause rendering\n\tconst [loading, setLoading] = useState(true);\n\n\t// an array of JSON that describes the data of each field\n\t// Example data: [{url: string, initialMode: string(optional)}]\n\tconst [fields, setFields] = useState([]);\n\t// ##──── End state ─────────────────────────────────────────────────────────────────────────\n\n\t// ##──── Prop params ───────────────────────────────────────────────────────────────────────\n\tconst { _id } = props;\n\tconst { source } = props;\n\n\t/**\n\t * When the collapser button is pressed this is called\n\t * - loadData uses the props.source given to this component to set the fields state\n\t * - loadData only sets the fields state if its not collapsed (ie visible)\n\t * - this function should only be called once\n\t *\n\t */\n\tconst loadData = () => {\n\t\tif (!collapsed) {\n\t\t\tconst data =\n\t\t\t\tsource instanceof Array && source !== undefined\n\t\t\t\t\t? source\n\t\t\t\t\t: new Array(source);\n\n\t\t\t// set the fields state to render these in\n\t\t\tsetFields(data);\n\n\t\t\t// set loading to false because setFields now has data\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\t/**\n\t * handles if the dropdown should be displayed or not\n\t * @param {JSON} event - the click event from the associated button\n\t */\n\tconst handleCollapser = (event) => {\n\t\tevent.preventDefault();\n\t\tsetCollapsed(!collapsed);\n\n\t\t// get the target conent div to show/hide it\n\t\tconst content = event.target.closest(\"div\").querySelector(\".content\");\n\n\t\tif (collapsed) {\n\t\t\tcontent.className = \"content collapsed\";\n\t\t\tsetButtonText(`Open ${props.name}`);\n\t\t} else {\n\t\t\tcontent.className = \"content\";\n\t\t\tsetButtonText(`Close ${props.name}`);\n\t\t\tloadData();\n\t\t}\n\t};\n\n\t/**\n\t * handles adding a field by adding a new object to the fields state for rendering\n\t */\n\tconst handleAddField = () => {\n\t\tconsole.log(\"adding field\");\n\t\tsetFields(fields.concat({ url: \"\", initialMode: \"edit\" }));\n\t};\n\n\treturn (\n\t\t<Collapsible>\n\t\t\t<a href={\"/\"} onClick={handleCollapser}>\n\t\t\t\t{buttonText} <DropdownButton collapsed={collapsed} />\n\t\t\t</a>\n\n\t\t\t<div className=\"content collapsed\">\n\t\t\t\t{!loading &&\n\t\t\t\t\t// render each field in the dropdown using the fields state\n\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\treturn renderData(\n\t\t\t\t\t\t\tfield.url,\n\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tfield.initialMode\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\n\t\t\t\t{/* if loading has finished and theres no fields to render \"No Data\"*/}\n\t\t\t\t{!loading && fields.length === 0 && `No data found.`}\n\n\t\t\t\t{/* render the add field button if enabled through props */}\n\t\t\t\t{props.addField && <PlusButton onClick={handleAddField} />}\n\t\t\t</div>\n\t\t</Collapsible>\n\t);\n}\n","import React, { useState } from \"react\";\nimport HistoryDropdown from \"./dropdowns/HistoryDropdown\";\nimport SourcesDropdown from \"./dropdowns/SourcesDropdown\";\nimport { Button } from \"@material-ui/core\";\nimport \"../styles/styles.scss\";\n\nimport PageEditField from \"./pageEditField/PageEditField\";\n\nconst formCallback = async (fieldState, avoid, push) => {\n\tconst { _id, fieldName, newValue } = fieldState;\n\t// UPDATE WHERE SELECT _id IS _id\n\tconst filter = { _id: _id };\n\n\t// SET source.url = newValue\n\tconst update = { [fieldName]: push };\n\n\t// print them out for debugging\n\tconsole.log(`filter: ${JSON.stringify(filter)}`);\n\tconsole.log(`update: ${JSON.stringify(update)}`);\n\n\t// construct the body request\n\tconst body = {\n\t\tfilter: filter,\n\t\tupdate: update,\n\t};\n\n\t// stringify it for the POST request\n\tconsole.log(\"stringifying the body\");\n\tconst bodyString = JSON.stringify(body);\n\n\t// send the post request\n\tconst url = `http://blog_gateway/api/v1/watch/update/${_id}`;\n\treturn fetch(url, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json; charset=UTF-8\",\n\t\t},\n\t\tbody: bodyString,\n\t});\n};\n\nconst deletePageHandler = async (_id) => {\n\tconst postURL = `http://blog_gateway/api/v1/watch/delete/${_id}`;\n\tconst options = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json; charset=UTF-8\",\n\t\t},\n\t};\n\tconst result = await (await fetch(postURL, options)).json();\n\treturn result;\n};\n\nexport default function Model(props) {\n\t// console.log(props);\n\tconst [open, setOpen] = useState(false);\n\tconst [fields, setFields] = useState([]);\n\n\tconst { _id } = props.data.original;\n\n\t// uses the setOpen() state to control the modal\n\tfunction toggleModal() {\n\t\t// set open to the opposite\n\t\tsetOpen(!open);\n\n\t\t// if the modal is opening load in the fields for it\n\t\tif (!open) {\n\t\t\tconsole.log(`loading fields for the modal: \"${props.pageName}\"`);\n\t\t\tsetFields(\n\t\t\t\tformFieldComponents.map((field) => {\n\t\t\t\t\treturn field;\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\t// a tempalte that defines each field in the edit\n\tconst formFields = [\n\t\t{\n\t\t\tname: \"ID\",\n\t\t\tfieldName: \"_id\",\n\t\t\tvalue: props._id,\n\t\t\tdisabled: true,\n\t\t},\n\t\t{\n\t\t\tname: \"Page Name\",\n\t\t\tfieldName: \"pageName\",\n\t\t\tvalue: props.pageName,\n\t\t\tdisabled: false,\n\t\t},\n\t\t{\n\t\t\tname: \"Website Path\",\n\t\t\tfieldName: \"websitePath\",\n\t\t\tvalue: props.websitePath,\n\t\t\tdisabled: false,\n\t\t},\n\t\t{\n\t\t\tname: \"Hidden\",\n\t\t\tfieldName: \"hidden\",\n\t\t\tvalue: props.hidden,\n\t\t\tdisabled: false,\n\t\t},\n\t\t{\n\t\t\tname: \"Revision\",\n\t\t\tfieldName: \"__v\",\n\t\t\tvalue: props.__v,\n\t\t\thistory: props.history,\n\t\t\tdisabled: true,\n\t\t},\n\t];\n\n\tconst formFieldComponents = formFields.map((field, i) => {\n\t\treturn (\n\t\t\t<PageEditField\n\t\t\t\tname={field.name}\n\t\t\t\tfieldName={field.fieldName}\n\t\t\t\tvalue={field.value}\n\t\t\t\tkey={props._id + i}\n\t\t\t\t_id={props._id}\n\t\t\t\tdisabled={field.disabled}\n\t\t\t\tdeletable={false}\n\t\t\t\tcolor={\"#282C34\"}\n\t\t\t\tformCallback={formCallback}\n\t\t\t/>\n\t\t);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tclassName=\"button is-dark\"\n\t\t\t\tkey={props.cellID}\n\t\t\t\tonClick={toggleModal}\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</button>\n\n\t\t\t{/* Modal wrapper */}\n\t\t\t<div className={`modal ${open ? \"is-active\" : \"\"} `}>\n\t\t\t\t{/* Dim background */}\n\t\t\t\t<div className=\"modal-background\" onClick={toggleModal}></div>\n\n\t\t\t\t{/* Modal card */}\n\t\t\t\t<div className=\"modal-card\">\n\t\t\t\t\t<header className=\"modal-card-head\">\n\t\t\t\t\t\t<p className=\"modal-card-title\">{props.pageName}</p>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"delete\"\n\t\t\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\t\t\tonClick={toggleModal}\n\t\t\t\t\t\t></button>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section className=\"modal-card-body\">\n\t\t\t\t\t\t{/* print out every form field for this modal */}\n\t\t\t\t\t\t<div className=\"fieldsGoHere\">\n\t\t\t\t\t\t\t{fields.map((f) => {\n\t\t\t\t\t\t\t\treturn f;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<HistoryDropdown\n\t\t\t\t\t\t\t_id={props.data.original._id}\n\t\t\t\t\t\t\tsource={props.data.original.source}\n\t\t\t\t\t\t></HistoryDropdown>\n\t\t\t\t\t\t<SourcesDropdown\n\t\t\t\t\t\t\t_id={props.data.original._id}\n\t\t\t\t\t\t\tsource={props.data.original.source}\n\t\t\t\t\t\t\taddField={true}\n\t\t\t\t\t\t\tname={\"sources\"}\n\t\t\t\t\t\t></SourcesDropdown>\n\t\t\t\t\t</section>\n\t\t\t\t\t<footer className=\"modal-card-foot\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t// delete the page\n\t\t\t\t\t\t\t\tawait deletePageHandler(_id);\n\n\t\t\t\t\t\t\t\t// close the modal after deleting the page\n\t\t\t\t\t\t\t\ttoggleModal();\n\n\t\t\t\t\t\t\t\t// TODO somehow let Pages/Table component know of the change to reload fetchData or remote the row somehow\n\t\t\t\t\t\t\t\t// remove the row from the table\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</footer>\n\t\t\t\t</div>\n\t\t\t\t{/* End modal card */}\n\t\t\t</div>\n\t\t\t{/* End modal wrapper */}\n\t\t</>\n\t);\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nconst BuildButton = (props) => {\n\tconst { _id } = props;\n\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst [hasSubmit, setHasSubmit] = useState(false);\n\n\tconst fakeTimeout = async () => {\n\t\treturn await new Promise((resolve) =>\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({ success: true });\n\t\t\t}, 1000)\n\t\t);\n\t};\n\n\tconst buildPage = async (_id) => {\n\t\tconst buildUrl = `http://blogbuilder/build/${_id}`;\n\t\tconst timeout = 10000;\n\n\t\t// this wires into fetch to abort it\n\t\tconst controller = new AbortController();\n\n\t\t// plug the timeout and controller signal into the request\n\t\tconst options = {\n\t\t\tmethod: \"GET\",\n\t\t\ttimeout: timeout,\n\t\t\tsignal: controller.signal,\n\t\t};\n\n\t\t// start a timer and abort if it runs out\n\t\tconst id = setTimeout(() => controller.abort(), timeout);\n\n\t\ttry {\n\t\t\t// start the request (has the controller and timeout in its options)\n\t\t\tconst response = await fetch(buildUrl, options);\n\t\t\tconst result = await response.json();\n\n\t\t\t// if we got here then the request completed, so cancle the timer\n\t\t\tclearTimeout(id);\n\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\t// TODO return some error and handle it in the button\n\t\t\treturn {};\n\t\t}\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\t// MUI props\n\t\t\tvariant=\"contained\"\n\t\t\ttype=\"submit\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={isSubmitting}\n\t\t\t// super hacked together solution to display the button as either\n\t\t\t// on render show as blue: 666A72\n\t\t\t// on submitting as gray: 1976D2\n\t\t\t// on submit as green: green\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: hasSubmit\n\t\t\t\t\t? \"green\"\n\t\t\t\t\t: `${!isSubmitting ? \"#1976D2\" : \"#666A72\"}`,\n\t\t\t}}\n\t\t\t// cell props\n\t\t\tonClick={async () => {\n\t\t\t\t// disable the button\n\t\t\t\tsetIsSubmitting(true);\n\n\t\t\t\t// start building the page\n\t\t\t\tconsole.log(\"building page...\");\n\t\t\t\tconst page = await buildPage(_id);\n\n\t\t\t\t// once the page is build enable the button\n\t\t\t\tconsole.log(\"done building page\");\n\t\t\t\tconsole.log(page);\n\t\t\t\tsetIsSubmitting(false);\n\t\t\t\tsetHasSubmit(true);\n\t\t\t}}\n\t\t>\n\t\t\tBuild\n\t\t</Button>\n\t);\n};\n\nexport default BuildButton;\n","import React, { useRef } from \"react\";\n// import styled from \"styled-components\";\nimport { useTable, usePagination } from \"react-table\";\nimport styled from \"styled-components\";\nimport Modal from \"./Modal\";\nimport SearchBar from \"./SearchBar\";\nimport { Button } from \"@material-ui/core\";\nimport BuildButton from \"./BuildButton\";\n\nconst Loading = styled.tr`\n\tgrid-column: 1 / -1;\n\tprogress {\n\t\twidth: 100%;\n\t\tbackground: #363636;\n\t}\n`;\n\nconst NavButtonsLeft = styled.div`\n\tbutton {\n\t\tmargin: 0 10px;\n\t}\n\n\t*:last-child {\n\t\tmargin: 0;\n\t}\n`;\n\nconst NavButtonsRight = styled.div`\n\t* {\n\t\tmargin: 0 10px;\n\t}\n\n\t*:first-child {\n\t\tmargin: 0;\n\t}\n`;\n\nconst Pagination = styled.div`\n\tpadding: 1em 0;\n\tstrong {\n\t\tcolor: #dedede;\n\t}\n\n\tinput {\n\t\tbackground: #363636;\n\t\tborder: 0px solid black;\n\t\tborder-radius: 5px;\n\t\t// padding: 10px;\n\t\theight: 40px;\n\t\ttext-align: center;\n\t\tcolor: #dedede;\n\t}\n\n\t// disable input spinners (tick goto page box up and down)\n\tinput[type=\"number\"]::-webkit-outer-spin-button,\n\tinput[type=\"number\"]::-webkit-inner-spin-button {\n\t\t-webkit-appearance: none;\n\t\tmargin: 0;\n\t}\n\n\tinput[type=\"number\"] {\n\t\t-moz-appearance: textfield;\n\t}\n\n\tselect {\n\t\tbackground: #363636;\n\t\tborder: 0px solid black;\n\t\tpadding: 5px;\n\t\ttext-align: center;\n\t\tfont-size: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #dedede;\n\n\t\t// remove the dropdown arrow\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t\ttext-indent: 1px;\n\t\ttext-overflow: \"\";\n\t}\n`;\n\nconst Styles = styled.div`\n\ttable {\n\t\tborder: none;\n\t\twidth: 100%;\n\t\tborder-spacing: 0;\n\n\t\ttr {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: 0.5fr 1fr 2fr 10% 10%;\n\t\t\tcolor: #dedede;\n\t\t}\n\n\t\t// make the loading bar (last row) span all columns\n\t\ttr:last-child > td {\n\t\t\tgrid-column: 1 / -1;\n\t\t}\n\n\t\ttr:hover {\n\t\t\tbackground: #51555e;\n\t\t}\n\n\t\ttd {\n\t\t\ttext-overflow: ellipsis;\n\t\t\toverflow: hidden;\n\t\t\twhite-space: nowrap;\n\t\t}\n\n\t\ttd:last-child,\n\t\ttd:nth-last-child(2) {\n\t\t\talign-self: end;\n\t\t\tjustify-self: right;\n\t\t}\n\n\t\tth {\n\t\t\ttext-align: left;\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0.5rem;\n\t\t\t// border-bottom: 1px solid black;\n\t\t\t// border-right: 1px solid black;\n\n\t\t\t:last-child {\n\t\t\t\tborder-right: 0;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default function Table({\n\tcolumns,\n\tdata,\n\tfetchData,\n\tloading,\n\tpageCount: controlledPageCount,\n}) {\n\tconst {\n\t\tgetTableProps,\n\t\tgetTableBodyProps,\n\t\tgotoPage,\n\t\tpage,\n\t\tcanPreviousPage,\n\t\tcanNextPage,\n\t\tpageOptions,\n\t\tpageCount,\n\t\tnextPage,\n\t\tpreviousPage,\n\t\tsetPageSize,\n\t\tprepareRow,\n\t\tstate: { pageIndex, pageSize },\n\t} = useTable(\n\t\t{\n\t\t\tcolumns,\n\t\t\tdata,\n\t\t\tinitialState: { pageIndex: 0 }, // Pass our hoisted table state\n\t\t\tmanualPagination: true,\n\t\t\tpageCount: controlledPageCount,\n\t\t},\n\t\tusePagination\n\t);\n\n\tconst [searchFilter, setSearchFilter] = React.useState(\"\");\n\n\t// Listen for changes in pagination and use the state to fetch our new data\n\tReact.useEffect(() => {\n\t\tconsole.log(`the searchFilter is: ${searchFilter}`);\n\t\tfetchData({ pageIndex, pageSize, searchFilter });\n\t}, [fetchData, pageIndex, pageSize, searchFilter]);\n\n\t// Render the UI for your table\n\treturn (\n\t\t<Styles>\n\t\t\t<SearchBar\n\t\t\t\tformCallback={(queryString, tag) => {\n\t\t\t\t\tif (!tag) {\n\t\t\t\t\t\tsetSearchFilter(\n\t\t\t\t\t\t\t`pageName/${queryString || \"placeholder\"}`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSearchFilter(`${tag.key}/${tag.value}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!queryString) {\n\t\t\t\t\t\tsetSearchFilter(``);\n\t\t\t\t\t}\n\n\t\t\t\t\t// set the current page number back to the first page\n\t\t\t\t\tgotoPage(0);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<table {...getTableProps()}>\n\t\t\t\t<tbody {...getTableBodyProps()}>\n\t\t\t\t\t{page.map((row, i) => {\n\t\t\t\t\t\tprepareRow(row);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\n\t\t\t\t\t\t\t\t{row.cells.map((cell, i) => {\n\t\t\t\t\t\t\t\t\t// console.log(cell);\n\n\t\t\t\t\t\t\t\t\t// store the return value\n\t\t\t\t\t\t\t\t\tlet output;\n\n\t\t\t\t\t\t\t\t\t// figure out if we are displaying buttons or content\n\t\t\t\t\t\t\t\t\tswitch (cell.column.Header) {\n\t\t\t\t\t\t\t\t\t\t// Return the edit button\n\t\t\t\t\t\t\t\t\t\tcase \"Edit\":\n\t\t\t\t\t\t\t\t\t\t\toutput = (\n\t\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={cell.row}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// cells ID (1,2,3...)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellID={cell.row.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// pagename\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpageName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.row.original\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.pageName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// websitePath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twebsitePath={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.row.original\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.websitePath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// hidden\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thidden={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.row.original\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.hidden\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// __v\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__v={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.row.original\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.__v\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// _id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.row.allCells[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t// Return the rebuild button\n\t\t\t\t\t\t\t\t\t\tcase \"Build\":\n\t\t\t\t\t\t\t\t\t\t\toutput = (\n\t\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<BuildButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// disabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// cell props\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={cell.row.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell.row.original\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t._id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tBuild\n\t\t\t\t\t\t\t\t\t\t\t\t\t</BuildButton>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase \"Index\":\n\t\t\t\t\t\t\t\t\t\t\toutput = (\n\t\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cell.row.index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\t// Return the cells data\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\toutput = (\n\t\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{cell.render(\"Cell\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* </span> */}\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<Loading>\n\t\t\t\t\t\t{loading && (\n\t\t\t\t\t\t\t// Use our custom loading state to show a loading indicator\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<progress\n\t\t\t\t\t\t\t\t\tclassName=\"progress is-medium is-dark\"\n\t\t\t\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t45%\n\t\t\t\t\t\t\t\t</progress>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Loading>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<Pagination className=\"pagination\">\n\t\t\t\t<NavButtonsLeft>\n\t\t\t\t\t{/* first page */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button is-dark\"\n\t\t\t\t\t\tonClick={() => gotoPage(0)}\n\t\t\t\t\t\tdisabled={!canPreviousPage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\"<<\"}\n\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t{/* previous page */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button is-dark\"\n\t\t\t\t\t\tonClick={() => previousPage()}\n\t\t\t\t\t\tdisabled={!canPreviousPage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\"<\"}\n\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t{/* next page */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button is-dark\"\n\t\t\t\t\t\tonClick={() => nextPage()}\n\t\t\t\t\t\tdisabled={!canNextPage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\">\"}\n\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t{/* last page */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button is-dark\"\n\t\t\t\t\t\tonClick={() => gotoPage(pageCount - 1)}\n\t\t\t\t\t\tdisabled={!canNextPage}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\">>\"}\n\t\t\t\t\t</button>{\" \"}\n\t\t\t\t</NavButtonsLeft>\n\t\t\t\t<NavButtonsRight>\n\t\t\t\t\t{/* page number of total */}\n\t\t\t\t\t<span>\n\t\t\t\t\t\tPage{\" \"}\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{pageIndex + 1} of {pageOptions.length}\n\t\t\t\t\t\t</strong>{\" \"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\tGo to page:{\" \"}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tdefaultValue={pageIndex + 1}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tconst page = e.target.value\n\t\t\t\t\t\t\t\t\t? Number(e.target.value) - 1\n\t\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\t\tgotoPage(page);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName=\"select\"\n\t\t\t\t\t\tvalue={pageSize}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetPageSize(Number(e.target.value));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{[1, 10, 20, 30, 40, 50].map((pageSize) => (\n\t\t\t\t\t\t\t<option key={pageSize} value={pageSize}>\n\t\t\t\t\t\t\t\tShow {pageSize}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</NavButtonsRight>\n\t\t\t</Pagination>\n\t\t</Styles>\n\t);\n}\n","import fetchDataPromise from \"./helpers/fetchDataPromise\";\nimport React, { useMemo, useState, useRef, useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport SearchBar from \"./SearchBar\";\n\nimport Table from \"./Table\";\n\nexport default function Pages() {\n\tconst [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [pageCount, setPageCount] = useState(0);\n\n\tconst columns = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: \"Index\",\n\t\t\t\taccessor: \"i\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"ID\",\n\t\t\t\taccessor: \"_id\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"page Name\",\n\t\t\t\taccessor: \"pageName\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Edit\",\n\t\t\t\taccessor: \"\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Build\",\n\t\t\t\taccessor: \"\",\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tconst fetchData = React.useCallback(\n\t\tasync ({ pageSize, pageIndex, searchFilter }) => {\n\t\t\t// console.log(\"running fetchData callback\");\n\t\t\t// This will get called when the table needs new data\n\n\t\t\t// Set the loading state\n\t\t\tsetLoading(true);\n\n\t\t\tconst json = await fetchDataPromise(\n\t\t\t\tpageIndex,\n\t\t\t\tpageSize,\n\t\t\t\tsearchFilter\n\t\t\t);\n\n\t\t\tconst newData = json.data;\n\t\t\tsetData(newData);\n\n\t\t\tif (!searchFilter) {\n\t\t\t\tconst pgCount = Math.ceil(parseInt(json.count) / pageSize);\n\t\t\t\tsetPageCount(pgCount);\n\t\t\t\tconsole.log(`the new number of pages is: ${pgCount}`);\n\t\t\t} else {\n\t\t\t\t// if there is a filter (we are searching for a page) then only show page numbers for those results\n\t\t\t\tconst pgCount = Math.ceil(parseInt(newData.length) / pageSize);\n\t\t\t\tsetPageCount(pgCount);\n\t\t\t\tconsole.log(`the new number of pages is: ${pgCount}`);\n\t\t\t}\n\n\t\t\tsetLoading(false);\n\t\t},\n\t\t[]\n\t);\n\n\treturn (\n\t\t<Container maxWidth=\"md\">\n\t\t\t<Table\n\t\t\t\tcolumns={columns}\n\t\t\t\tdata={data}\n\t\t\t\tfetchData={fetchData}\n\t\t\t\tloading={loading}\n\t\t\t\tpageCount={pageCount}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n","import Styled from \"styled-components\";\n\nconst Fieldset = Styled.fieldset`\n// margin: 2em;\n// padding: 0.25em 0;\n`;\n\nconst FormWrapper = Styled.div`\nmargin-top: 5em;\npadding: 2em;\n`;\n\nconst SubmitWrapper = Styled.div`\nmargin: 1.75em 0;\n`;\n\nconst SourceRow = Styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr auto auto;\n& button {\n\tmargin: 10px;\n}\n`;\n\n// const IncrementDecrementButtonGroup = Styled.div`\n// display: flex;\n// flex-direction: row;\n// // margin: 10px 0;\n// // margin: 0 10px;\n// // margin-left: 10px;\n// // margin: 0 10px 0 10px;\n// button {\n// \t// margin: 0 10px 0 10px;\n// \t// height: 50%;\n// }\n// // display: flex;\n// // flex-direction: row;\n// // justify-content: center;\n// // flex-direction: column;\n// // align-items: center;\n// // button {\n// // \tdisplay: flex;\n// // \tjustify-content: center;\n// // \tflex-direction: row;\n// // \tmargin: 0 5px;\n// // \theight: 30px;\n// // }\n// `;\n\nexport { Fieldset, FormWrapper, SubmitWrapper, SourceRow };\n","import React from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst BlueCheckbox = withStyles({\n\troot: {\n\t\tcolor: blue[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: blue[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n/**\n * Generic styling for MUI elements on the UploadForm component\n */\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t\"& fieldset\": {\n\t\t\tmargin: theme.spacing(1, 0),\n\t\t\t// marginTop: theme.spacing(1),\n\t\t\t// marginBottom: theme.spacing(1),\n\t\t},\n\t\t\"& pre\": {\n\t\t\tcolor: \"#dedede\",\n\t\t},\n\t},\n}));\n\nconst sourceRowStyles = makeStyles((theme) => ({\n\troot: {\n\t\t\"& > *\": {\n\t\t\t// margin: \"auto\",\n\t\t\t// backgroundColor: \"red\",\n\t\t\t// width: \"25ch\",\n\t\t},\n\t\t\"& button\": {\n\t\t\t// backgroundColor: \"#121212\",\n\t\t\t// display: \"flex\",\n\t\t\t// marginTop: \"2.5px\",\n\t\t\t// marginBottom: \"2.5px\",\n\t\t\t// height: \"20px\",\n\t\t\t// width: \"25px\",\n\t\t},\n\t\t// \"& top-button\": {\n\t\t// \tbackgroundColor: \"#121212\",\n\t\t// \t// display: \"flex\",\n\t\t// },\n\t\t// \"& input\": {\n\t\t// \t// backgroundColor: \"red\",\n\t\t// \tmargin: \"0\",\n\t\t// },\n\t},\n}));\n\nexport { BlueCheckbox, sourceRowStyles, useStyles };\n","import * as Yup from \"yup\";\n\nconst validationSchema = Yup.object({\n\tpageName: Yup.string().required(\"Required\"),\n\twebsitePath: Yup.string().required(\"Required\"),\n\thidden: Yup.bool(),\n\tsources: Yup.array(Yup.object({ url: Yup.string().required() })),\n\tmeta: Yup.object({\n\t\ttemplate: Yup.string()\n\t\t\t.oneOf([\"blogPost.ejs\", \"menu.ejs\", \"homepage.ejs\"])\n\t\t\t.required(),\n\t}),\n});\n\nexport default validationSchema;\n","import React from \"react\";\nimport { useField, FastField } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\n\nconst MyTextInput = ({ label, ...props }) => {\n\t// useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n\t// which we can spread on <input>. We can use field meta to show an error\n\t// message if the field is invalid and it has been touched (i.e. visited)\n\tconst [field, meta] = useField(props);\n\n\t// remove the placeHolder so its not passed to Field as placeholder={props.placeholder}\n\t// instead we need to pass props.placeholder as a label for material UI to animate it\n\tdelete props.placeholder;\n\n\treturn (\n\t\t<div noValidate autoComplete=\"off\">\n\t\t\t{/* <label htmlFor={props.id || props.name}>{label}</label> */}\n\t\t\t<FastField\n\t\t\t\t// ? material UI binding to style it as a textfield\n\t\t\t\tcomponent={TextField}\n\t\t\t\t// styled component props\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tlabel={label}\n\t\t\t\t// formik props\n\t\t\t\tclassName=\"text-input\"\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<div className=\"error\">{meta.error}</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default MyTextInput;\n","import React, { useState } from \"react\";\n\nimport { useField, Field } from \"formik\";\nimport { FormControlLabel } from \"@material-ui/core\";\nimport { Checkbox } from \"formik-material-ui\";\n\nimport { BlueCheckbox } from \"./MUIStyles\";\n\nconst MyCheckbox = ({ children, ...props }) => {\n\t// React treats radios and checkbox inputs differently other input types, select, and textarea.\n\t// Formik does this too! When you specify `type` to useField(), it will\n\t// return the correct bag of props for you\n\tconst [field, meta] = useField({ ...props, type: \"checkbox\" });\n\n\treturn (\n\t\t<div>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<BlueCheckbox\n\t\t\t\t\t\t// ? formik controls\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Hidden\"\n\t\t\t/>\n\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<div className=\"error\">{meta.error}</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default MyCheckbox;\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { NativeSelect } from \"@material-ui/core\";\n\nconst MySelect = ({ label, ...props }) => {\n\tconst [field, meta] = useField(props);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <label htmlFor={props.id || props.name}>{label}</label> */}\n\t\t\t<NativeSelect {...field} {...props} />\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<div className=\"error\">{meta.error}</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n\nexport default MySelect;\n","import React, { useState, useEffect, getIn } from \"react\";\nimport {\n\tuseFormikContext,\n\tFieldArray,\n\tField,\n\tFastField,\n\tuseField,\n} from \"formik\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport { SourceRow } from \"./UploadForm.styles\";\nimport { sourceRowStyles } from \"./MUIStyles\";\nimport MyCheckbox from \"./Checkbox\";\n\nconst ErrorMessage = ({ name }) => (\n\t<Field\n\t\tname={name}\n\t\trender={({ form }) => {\n\t\t\tconst error = getIn(form.errors, name);\n\t\t\tconst touch = getIn(form.touched, name);\n\t\t\treturn touch && error ? error : null;\n\t\t}}\n\t/>\n);\n\nfunction SourcesSection() {\n\t// ? include handleSubmit if you want to submit from this component instead of including it in the overall form\n\t// ? const { handleSubmit, values } = useFormikContext(); // formikProps\n\tconst { values, errors } = useFormikContext(); // formikProps\n\tconst classes = sourceRowStyles();\n\n\tconst [checkedSources, setCheckedSources] = useState([]);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"updated\");\n\t\t// setCheckedSources()\n\t\treturn () => {\n\t\t\t// cleanup\n\t\t};\n\t}, [values.source]);\n\n\treturn (\n\t\t<FieldArray\n\t\t\tname=\"source\"\n\t\t\trender={(arrayHelpers) => (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t{values.source && values.source.length > 0 ? (\n\t\t\t\t\t\tvalues.source.map((source, index) => (\n\t\t\t\t\t\t\t<SourceRow key={index}>\n\t\t\t\t\t\t\t\t<FastField\n\t\t\t\t\t\t\t\t\t// ? material UI binding to style it as a textfield\n\t\t\t\t\t\t\t\t\tcomponent={TextField}\n\t\t\t\t\t\t\t\t\t// ? material UI props\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tlabel={`url ${index}`}\n\t\t\t\t\t\t\t\t\t// ? formik props\n\t\t\t\t\t\t\t\t\tname={`source[${index}].url`}\n\t\t\t\t\t\t\t\t\t// placeholder={`url ${index}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <IncrementDecrementButtonGroup> */}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"top-button\"\n\t\t\t\t\t\t\t\t\t// ? material UI props\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t// formik props\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={() => arrayHelpers.remove(index)} // remove a friend from the list\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t// ? material UI props\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t// ? formik props\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tarrayHelpers.insert(index + 1, \"\")\n\t\t\t\t\t\t\t\t\t} // insert an empty string at a position\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{/* </IncrementDecrementButtonGroup> */}\n\t\t\t\t\t\t\t</SourceRow>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t// ? material UI props\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t// ? formik props\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => arrayHelpers.push(\"\")}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* show this when user has removed all sources from the list */}\n\t\t\t\t\t\t\tAdd page sources\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t/>\n\t);\n}\nexport default SourcesSection;\n","import React, { useState } from \"react\";\nimport { Formik, Form, Field, getIn, useFormikContext } from \"formik\";\nimport { Button, Container, Paper } from \"@material-ui/core\";\nimport { Fieldset, FormWrapper, SubmitWrapper } from \"./UploadForm.styles\";\nimport { useStyles } from \"./MUIStyles\";\nimport validationSchema from \"./validation\";\nimport MyTextInput from \"./Input\";\nimport MyCheckbox from \"./Checkbox\";\nimport MySelect from \"./Option\";\nimport SourcesSection from \"./fieldArray\";\nimport Dropdown from \"../dropdowns/Dropdown\";\n\n// {\n//     \"pageName\": \"testPage\",\n//     \"source\": [{\"remote\": true, \"url\": \"a.com\"}],\n//     \"websitePath\": \"/deleteMe\",\n//     \"hidden\": false,\n//     \"meta\": {\"template\": \"blogPost.ejs\"}\n// }\n\nconst ErrorMessage = ({ name }) => (\n\t<Field\n\t\tname={name}\n\t\trender={({ form }) => {\n\t\t\tconst error = getIn(form.errors, name);\n\t\t\tconst touch = getIn(form.touched, name);\n\t\t\treturn touch && error ? error : null;\n\t\t}}\n\t/>\n);\n\nconst submitHandler = async ({\n\tpageName,\n\twebsitePath,\n\thidden,\n\tsource,\n\tmeta,\n}) => {\n\tconst postURL = `http://blog_gateway/api/v1/watch/upload`;\n\n\t// theres no support for electing a page as \"not remote\" right now\n\t// this is just a hack to make it play nice by adding the {remote: true} field to each page source\n\tfor (let s of source) {\n\t\tif (s) s.remote = true;\n\t}\n\n\tconst options = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ pageName, websitePath, hidden, source, meta }),\n\t};\n\n\treturn await fetch(postURL, options).then((res) => {\n\t\treturn res.json();\n\t});\n};\n\nconst SignupForm = () => {\n\tconst classes = useStyles();\n\n\tconst [submitResult, setSubmitResult] = useState({\n\t\tsuccess: false,\n\t\tmessage: \"please wait\",\n\t});\n\t// const { values, submitForm } = useFormikContext();\n\n\treturn (\n\t\t<Container className={classes.root} maxWidth=\"md\">\n\t\t\t<Paper elevation={3} elementtype=\"section\">\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\tpageName: \"\",\n\t\t\t\t\t\twebsitePath: \"\",\n\t\t\t\t\t\thidden: false, // added for our checkbox\n\t\t\t\t\t\tsource: [{ url: \"\" }],\n\t\t\t\t\t\tmeta: { template: \"\" },\n\t\t\t\t\t}}\n\t\t\t\t\tvalidateOnChange={false}\n\t\t\t\t\tvalidateOnBlur={false}\n\t\t\t\t\tvalidationMount={false}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\t\t// alert(JSON.stringify(values, null, 2));\n\t\t\t\t\t\t\tconst result = await submitHandler(values);\n\t\t\t\t\t\t\t// alert(JSON.stringify(result));\n\n\t\t\t\t\t\t\t// if its a valid result the blogwatcher should return the saved object\n\t\t\t\t\t\t\t// store the saved object in submitResult to print a success message\n\t\t\t\t\t\t\tif (result instanceof Object) {\n\t\t\t\t\t\t\t\tsetSubmitResult(result);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t\thandleChange={(event) => {\n\t\t\t\t\t\tconsole.log(\"alert!\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ values, submitCount, isSubmitting }) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<FormWrapper>\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<h1>Add page</h1>\n\t\t\t\t\t\t\t\t\t<Fieldset>\n\t\t\t\t\t\t\t\t\t\t{/* page name */}\n\t\t\t\t\t\t\t\t\t\t<MyTextInput\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Page Name\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"pageName\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"page name\"\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t{/* website path */}\n\t\t\t\t\t\t\t\t\t\t<MyTextInput\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Website Path\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"websitePath\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"website path\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Fieldset>\n\n\t\t\t\t\t\t\t\t\t<Fieldset>\n\t\t\t\t\t\t\t\t\t\t<SourcesSection></SourcesSection>\n\t\t\t\t\t\t\t\t\t</Fieldset>\n\n\t\t\t\t\t\t\t\t\t{/* page hidden */}\n\t\t\t\t\t\t\t\t\t<Fieldset>\n\t\t\t\t\t\t\t\t\t\t<MyCheckbox\n\t\t\t\t\t\t\t\t\t\t\t// the form control (name)\n\t\t\t\t\t\t\t\t\t\t\tname=\"hidden\"\n\t\t\t\t\t\t\t\t\t\t\t// what is displayed on the page (label)\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"hidden\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tHide page\n\t\t\t\t\t\t\t\t\t\t</MyCheckbox>\n\t\t\t\t\t\t\t\t\t</Fieldset>\n\n\t\t\t\t\t\t\t\t\t{/* template dropdown */}\n\t\t\t\t\t\t\t\t\t<Fieldset>\n\t\t\t\t\t\t\t\t\t\t<MySelect\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Template\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"meta.template\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\tSelect a template\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"blogPost.ejs\">\n\t\t\t\t\t\t\t\t\t\t\t\tblogPost.ejs\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"menu.ejs\">\n\t\t\t\t\t\t\t\t\t\t\t\tmenu.ejs\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"homePage.ejs\">\n\t\t\t\t\t\t\t\t\t\t\t\thomePage.ejs\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t</MySelect>\n\t\t\t\t\t\t\t\t\t</Fieldset>\n\n\t\t\t\t\t\t\t\t\t{/* submit */}\n\t\t\t\t\t\t\t\t\t<SubmitWrapper>\n\t\t\t\t\t\t\t\t\t\t{/* if nothing has been submitted yet show the submit button */}\n\n\t\t\t\t\t\t\t\t\t\t{/* if nothing submitted yet */}\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</SubmitWrapper>\n\n\t\t\t\t\t\t\t\t\t{/* <ErrorMessage name=\"source[0].url\" /> */}\n\t\t\t\t\t\t\t\t\t<Paper elevation={3}>\n\t\t\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t\t\t\t\t\t{submitCount === 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t? // print the payload\n\t\t\t\t\t\t\t\t\t\t\t\t\t  JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\\n\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t4\n\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t: // print the server response\n\t\t\t\t\t\t\t\t\t\t\t\t\t  JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitResult,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t4\n\t\t\t\t\t\t\t\t\t\t\t\t\t  )}\n\t\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</FormWrapper>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</Paper>\n\t\t</Container>\n\t);\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport Pages from \"./components/Pages\";\nimport UploadForm from \"./components/uploadForm/UploadForm\";\nimport styled from \"styled-components\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { purple } from \"@material-ui/core/colors\";\n\nconst Styles = styled.div`\n\tcolor: #dedede;\n\tfont-size: calc(10px + 1.5vmin);\n\t// padding: 0 10%;\n`;\n\n// const theme = createMuiTheme({\n// \ttypography: {\n// \t\tfontFamily: [\n// \t\t\t\"-apple-system\",\n// \t\t\t\"BlinkMacSystemFont\",\n// \t\t\t'\"Segoe UI\"',\n// \t\t\t\"Roboto\",\n// \t\t\t'\"Helvetica Neue\"',\n// \t\t\t\"Arial\",\n// \t\t\t\"sans-serif\",\n// \t\t\t'\"Apple Color Emoji\"',\n// \t\t\t'\"Segoe UI Emoji\"',\n// \t\t\t'\"Segoe UI Symbol\"',\n// \t\t].join(\",\"),\n// \t},\n// });\n\nconst theme = createMuiTheme({\n\ttypography: {\n\t\tfontFamily: \"Cantarell, Raleway, Arial\",\n\t},\n\toverrides: {\n\t\tMuiCssBaseline: {\n\t\t\t\"@global\": {\n\t\t\t\t\"@font-face\": \"Cantarell\",\n\t\t\t},\n\t\t},\n\t},\n\tpalette: {\n\t\ttype: \"dark\",\n\t\tbackground: {\n\t\t\tdefault: \"#282c34\",\n\t\t},\n\t},\n});\n\n// palette: {\n// \t// type: \"dark\",\n// \t// primary: {\n// \t// \tlight: \"#dedede\",\n// \t// \tmain: \"#363636\",\n// \t// \tdark: \"#121212\",\n// \t// },\n// \t// secondary: {\n// \t// \tlight: \"f6a5c0\",\n// \t// \tmain: \"#f48fb1\",\n// \t// \tdark: \"aa647b\",\n// \t// },\n// \t// error: {\n// \t// \tlight: \"#e57373\",\n// \t// \tmain: \"#f44336\",\n// \t// \tdark: \"#d32f2f\",\n// \t// },\n// \t// warning: {\n// \t// \tlight: \"#ffb74d\",\n// \t// \tmain: \"#ff9800\",\n// \t// \tdark: \"#f57c00\",\n// \t// },\n// \t// info: {\n// \t// \tlight: \"#64b5f6\",\n// \t// \tmain: \"#2196f3\",\n// \t// \tdark: \"#1976d2\",\n// \t// },\n// \t// success: {\n// \t// \tlight: \"#81c784\",\n// \t// \tmain: \"#4caf50\",\n// \t// \tdark: \"#388e3c\",\n// \t// },\n// },\n\n// const routes = (\n// \t<Route>\n// \t\t<Route path=\"*\" handler={Pages} />\n// \t</Route>\n// );\n\nfunction App() {\n\t// <CssBaseline />;\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<Styles>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t{/* <div> */}\n\t\t\t\t\t{/* <hr /> */}\n\t\t\t\t\t<Route exact path=\"/\" component={Pages} />\n\t\t\t\t\t<Route exact path=\"/upload\" component={UploadForm} />\n\t\t\t\t\t{/* </div> */}\n\t\t\t\t</BrowserRouter>\n\t\t\t</Styles>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}